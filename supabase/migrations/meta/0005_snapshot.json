{
  "id": "1c2a9651-bca7-4fdb-82ab-371913b4b66a",
  "prevId": "bee067d7-fc56-4c6d-bb31-8bd611f9733c",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.clicks": {
      "name": "clicks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "owner_id": {
          "name": "owner_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "link_id": {
          "name": "link_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "ts": {
          "name": "ts",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "ip": {
          "name": "ip",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ua": {
          "name": "ua",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ref": {
          "name": "ref",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "device": {
          "name": "device",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "clicks_link_ts_idx": {
          "name": "clicks_link_ts_idx",
          "columns": [
            {
              "expression": "link_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "ts",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "clicks_owner_ts_idx": {
          "name": "clicks_owner_ts_idx",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "ts",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "clicks_owner_id_owners_id_fk": {
          "name": "clicks_owner_id_owners_id_fk",
          "tableFrom": "clicks",
          "tableTo": "owners",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "clicks_link_id_links_id_fk": {
          "name": "clicks_link_id_links_id_fk",
          "tableFrom": "clicks",
          "tableTo": "links",
          "columnsFrom": [
            "link_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Allow owners to read analytics for their artist": {
          "name": "Allow owners to read analytics for their artist",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "exists (select 1 from links join artists on links.artist_id = artists.id where links.id = \"clicks\".\"link_id\" and artists.owner_id = (select auth.uid()))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.artists": {
      "name": "artists",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "owner_id": {
          "name": "owner_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'published'"
        },
        "theme": {
          "name": "theme",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "artists_slug_unique": {
          "name": "artists_slug_unique",
          "columns": [
            {
              "expression": "slug",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "artists_owner_idx": {
          "name": "artists_owner_idx",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "artists_owner_id_owners_id_fk": {
          "name": "artists_owner_id_owners_id_fk",
          "tableFrom": "artists",
          "tableTo": "owners",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Allow public read access to artists": {
          "name": "Allow public read access to artists",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Allow authenticated users to insert their own artist": {
          "name": "Allow authenticated users to insert their own artist",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = owner_id"
        },
        "Allow owners to update their own artist": {
          "name": "Allow owners to update their own artist",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = owner_id"
        },
        "Allow owners to delete their own artist": {
          "name": "Allow owners to delete their own artist",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = owner_id"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.links": {
      "name": "links",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "artist_id": {
          "name": "artist_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "label": {
          "name": "label",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "order": {
          "name": "order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "icon": {
          "name": "icon",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "badge": {
          "name": "badge",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "link_type": {
          "name": "link_type",
          "type": "link_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'link'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "links_artist_order_idx": {
          "name": "links_artist_order_idx",
          "columns": [
            {
              "expression": "artist_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "order",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "links_artist_id_artists_id_fk": {
          "name": "links_artist_id_artists_id_fk",
          "tableFrom": "links",
          "tableTo": "artists",
          "columnsFrom": [
            "artist_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Allow public read access to links": {
          "name": "Allow public read access to links",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Allow authenticated users to insert links for their artist": {
          "name": "Allow authenticated users to insert links for their artist",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "exists (select 1 from artists where artists.id = \"links\".\"artist_id\" and artists.owner_id = (select auth.uid()))"
        },
        "Allow owners to update their links": {
          "name": "Allow owners to update their links",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "exists (select 1 from artists where artists.id = \"links\".\"artist_id\" and artists.owner_id = (select auth.uid()))",
          "withCheck": "exists (select 1 from artists where artists.id = \"links\".\"artist_id\" and artists.owner_id = (select auth.uid()))"
        },
        "Allow owners to delete their links": {
          "name": "Allow owners to delete their links",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "exists (select 1 from artists where artists.id = \"links\".\"artist_id\" and artists.owner_id = (select auth.uid()))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.owners": {
      "name": "owners",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Allow all access for owners": {
          "name": "Allow all access for owners",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "id = (select auth.uid())",
          "withCheck": "id = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.link_type": {
      "name": "link_type",
      "schema": "public",
      "values": [
        "link",
        "social"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}